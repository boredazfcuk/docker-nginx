20200320

 - Change: Coronavirus has led me to make changes to get this deployed at work. Goign to be lots of changes, and due to time constraints, I'm not going to be updating this log for the time being

20200313

 - Change: Log now displays OS version

20200303

 - Change: Locations were hard-coded to container network alias names. Due to the way NGINX works, the proxy_pass directives are only resolved once, at start-up. The workaound is to set a variable containing the upstream server name, and to set the proxy_pass directive to be the variable. This causes NGINX to resolve the name each time it is requested (requires 'resolver' directive

20200301

 - Change: The Deluge location matching has been changed to remove the trailing slash. This is prevented Deluge from responding if there wasn't one.

20200229

 - Change: Spent days chasing a broken Nextcloud install. Turned out to be an accidental character deletion in a variable name in the FAST_CGI configuration file. The upshot is that I've been through the Nextcloud config with a fine tooth comb and cut out stuff that shouldnt have been in there, plus made some security improvements.

20200225

 - Change: Let's Encrypt's well-known acme-challenge was being blocked. Added a user agent check to unblock the Let's Encrypt Validation Server requests. Renewals now working.

20200222

 - Change: The change to the config file layouts meant that the commands that enable/disable the stack components needed updating. I've changed it from replacing then entire line of text to just changing the first character on the line

20200221

 - Change: Removed gzip compression configuration as it was leftover from the early days when HTTPS was optional
 - Change: Moved the 'Resolver' config item to the TLS config file as it's only required for ssl stapling verification. Belongs there really
 - Change: Disabled ssl session tickets. They break perfect Forward Secrecy, so it's better to take the CPU overhead of renegotiation each time.
 - Change: Now configured to prefer SSL server ciphers. Everything I've read says that this is to prevent an attacker downgrading to a weaker/broken cipher. Modern ciphers haven't been broken which is why everything out there says it's not needed if you use TLSv1.2 and TLSv1.3 only... This is true now, but may not be tomorrow. Having it enabled, alongside the weaker ciphers being disabled, prevents future downgrade attacks when they inevitably arise
 - Change: Changed layout format for config files to be more readable

20200220

 - Change: Added new locations for SABnzbd, Deluge, CouchPotato & SickGear to prevent access log spam

20200219

<Drunk Coding>
 - Change: Qualys SSL test should now return A+ rating
 - Change: Removed NGINX directives which were actually defaults
</Drunk Coding>

20200212

 - Change: Healthcheck now checks port availability on ports 80 and 443

20200211

 - New: Enable reverse proxying to a pac/wpad file hosting web server from a /proxyconfig/ base url

20200206

 - Change: Changed from CMD based launching to ENTRYPOINT
 - Bugfix: Code for setting domain names that the server respond on were not working as expected
 - Change: Split code for configuring server names, certificate locations and Nextcloud into three individual functions
 - Change: Added check to prevent usermod and groupmod from running if not required and prevent 'no changes' output
 - Change: Removed password protection for invalid links. Configured server to just ignore requests instead.

20200205

 - Change: Configured to now not respond to errors instead of serving a file. 404.html no longer required - removed.
 - Change: Configured to reply directly to requests for robots.txt instead of serving a file. robots.txt not longer required - removed.
 - Change: Set root at server level instead of location blocks
 - Change: Move logging configuration from Dockerfile to start-nginx
 - Change: Logging format now shows entire URL
 - Change: Started web-proxying development. Added function to start-nginx.sh to create a default proxy.pac that sends local traffic and everything else direct
 - Change: start-nginx.sh creates a local_networks.conf file to restrict wpad.dat to block external requests for wpad.dat
 - Change: Added LAN IP info to initialisation log for greater visibility

20200204
 - Change: start-nginx.sh script now creates password-proection.conf dynamically

20200202

 - Bugfix: $allowed_country variable wasn't set if $xenophobia variable empty. This prevented NGINX from launching


